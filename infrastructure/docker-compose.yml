# ------------------------------------------------------------------------------
# Local development stack for theCooperator (placeholder).
# ------------------------------------------------------------------------------
#
# Usage:
#     docker compose up -d --build
#
# At this stage only a Postgres service is defined; the backend will be added
# when implementation starts.
# ------------------------------------------------------------------------------

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: cooperator
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: coop
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      # Host port can be overridden via POSTGRES_PORT env var, defaults to 5432
      - "${POSTGRES_PORT:-5432}:5432"

  backend:
    build:
      context: ../
      dockerfile: infrastructure/Dockerfile.backend
    depends_on:
      - db
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: cooperator
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: coop
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"

  worker:
    build:
      context: ../
      dockerfile: infrastructure/Dockerfile.backend
    depends_on:
      - backend
      - redis
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: cooperator
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: coop
      CELERY_BROKER_URL: redis://redis:6379/0
    command: ["celery", "-A", "app.jobs.celery_app", "worker", "--loglevel=info"]

  test:
    build:
      context: ../
      dockerfile: infrastructure/Dockerfile.backend
    depends_on:
      - db
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: cooperator
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: coop
    working_dir: /opt/app/backend
    command: ["pytest", "-q", "--disable-warnings", "--maxfail=1"]

volumes:
  db_data: {}
